import{_ as t,a,b as i}from"./chunks/food_priority.n4Jp91Mw.js";import{_ as n,c as r,o as s,af as o}from"./chunks/framework.CtP7Q83N.js";const b=JSON.parse('{"title":"Inventory System","description":"","frontmatter":{},"headers":[],"relativePath":"wiki/systems/inventory.md","filePath":"wiki/systems/inventory.md"}'),l={name:"wiki/systems/inventory.md"};function c(m,e,g,d,h,u){return s(),r("div",null,e[0]||(e[0]=[o('<h1 id="inventory-system" tabindex="-1">Inventory System <a class="header-anchor" href="#inventory-system" aria-label="Permalink to &quot;Inventory System&quot;">​</a></h1><p><strong>Weight-Based Storage Management</strong></p><p>The inventory system in RuneEra operates on a weight-based capacity model that provides flexible storage solutions while maintaining realistic carrying limitations. This system affects both individual humanoids and settlement infrastructure, creating strategic decisions about resource allocation and logistics.</p><h2 id="inventory-mechanics" tabindex="-1">Inventory Mechanics <a class="header-anchor" href="#inventory-mechanics" aria-label="Permalink to &quot;Inventory Mechanics&quot;">​</a></h2><p><strong>Weight-Based Capacity System</strong></p><h3 id="core-principles" tabindex="-1">Core Principles <a class="header-anchor" href="#core-principles" aria-label="Permalink to &quot;Core Principles&quot;">​</a></h3><ul><li><strong>Weight Limitation</strong>: All inventories are constrained by maximum weight capacity rather than item slots</li><li><strong>Unlimited Items</strong>: Any number of items can be stored as long as total weight remains within limits</li><li><strong>Flexible Storage</strong>: Allows for diverse item combinations and strategic packing decisions</li><li><strong>Universal Application</strong>: System applies to both humanoids, animals and storage structures</li></ul><h3 id="capacity-determination" tabindex="-1">Capacity Determination <a class="header-anchor" href="#capacity-determination" aria-label="Permalink to &quot;Capacity Determination&quot;">​</a></h3><ul><li><strong>Base Capacity</strong>: Each entity has a fundamental weight limit</li><li><strong>Equipment</strong>: Bags and storage equipment can increase humanoids carrying capacity</li><li><strong>Animals</strong>: Different animals may have varying base carrying capacities</li></ul><h3 id="management" tabindex="-1">Management <a class="header-anchor" href="#management" aria-label="Permalink to &quot;Management&quot;">​</a></h3><ul><li><strong>Whitelist</strong>: Structure and animals storages have whitelist, that specifies which items and what amount to accept.</li><li><strong>Load Order</strong>: Order humanoids to load storage with items specified in whitelist.</li></ul><h2 id="humanoid-inventory-management" tabindex="-1">Humanoid Inventory Management <a class="header-anchor" href="#humanoid-inventory-management" aria-label="Permalink to &quot;Humanoid Inventory Management&quot;">​</a></h2><p><strong>Personal Storage and Logistics</strong></p><h3 id="essential-carrying-capacity" tabindex="-1">Essential Carrying Capacity <a class="header-anchor" href="#essential-carrying-capacity" aria-label="Permalink to &quot;Essential Carrying Capacity&quot;">​</a></h3><ul><li><strong>Survival Supplies</strong>: Food, medical supplies for extended activities</li><li><strong>Work Tools</strong>: Specialized equipment required for assigned tasks</li><li><strong>Combat Equipment</strong>: Weapons, armor, repair tools and tactical supplies</li></ul><h3 id="strategic-inventory-planning" tabindex="-1">Strategic Inventory Planning <a class="header-anchor" href="#strategic-inventory-planning" aria-label="Permalink to &quot;Strategic Inventory Planning&quot;">​</a></h3><ul><li><strong>Task-Specific Loads</strong>: Optimize carried items based on assigned activities</li><li><strong>Emergency Supplies</strong>: Maintain essential items for unexpected situations</li><li><strong>Resource Collection</strong>: Uses own gathering inventory that matches max weight of primary inventory</li><li><strong>Trade Items</strong>: Carry valuable goods for commerce and negotiation</li></ul><h2 id="storage-structures" tabindex="-1">Storage Structures <a class="header-anchor" href="#storage-structures" aria-label="Permalink to &quot;Storage Structures&quot;">​</a></h2><ul><li><strong>Storage box</strong>: Large-scale storage facilities for bulk resources</li><li><strong>Small storage box</strong>: Smaller-scale storage facilities for bulk resources</li><li><strong>Cooler</strong>: Limited to storing consumables, slows down consumable deterioration</li></ul><p>This comprehensive inventory system creates meaningful logistical challenges and strategic decisions, where effective resource management becomes as important as resource acquisition in building a successful settlement.</p><h2 id="screenshot" tabindex="-1">Screenshot <a class="header-anchor" href="#screenshot" aria-label="Permalink to &quot;Screenshot&quot;">​</a></h2><p><img src="'+t+'" alt="Inventory stock" data-zoomable="true"></p><p><img src="'+a+'" alt="Inventory stock management" data-zoomable="true"></p><p><img src="'+i+'" alt="Food priority" data-zoomable="true"></p>',24)]))}const f=n(l,[["render",c]]);export{b as __pageData,f as default};
